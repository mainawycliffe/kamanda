package cmd

import (
	"context"
	"os"

	"github.com/mainawycliffe/kamanda/firebase/auth"
	"github.com/mainawycliffe/kamanda/utils"
	"github.com/spf13/cobra"
)

// resetPasswordCmd represents the resetPassword command
var resetPasswordCmd = &cobra.Command{
	Use:     "password",
	Aliases: []string{"resetPassword", "reset-password"},
	Short:   "Reset password for a firebase user(s)",
	Long: `Reset the password of a Firebase user(s).

You can provide the password or the user or if left empty, Kamanda will automatically generate a password and print it.`,
	Run: func(cmd *cobra.Command, args []string) {
		password, _ := cmd.Flags().GetString("password")
		hasError := false
		for _, v := range args {
			passwordToSave := password
			if password == "" {
				passwordToSave = utils.PasswordGenerator(10)
			}
			user, err := auth.UpdateFirebaseUserPassword(context.Background(), v, passwordToSave)
			if err != nil {
				hasError = true
				utils.StdOutError(os.Stderr, "Error updating user %s password\n", v)
				continue
			}
			utils.StdOutSuccess(os.Stdout, "Password for user %s [%s] password set to %s\n", user.UID, user.Email, passwordToSave)
		}
		if hasError {
			os.Exit(1)
		}
		os.Exit(0)
	},
}

func init() {
	listUsersCmd.AddCommand(resetPasswordCmd)
	resetPasswordCmd.Flags().String(
		"password",
		"",
		"New password to replace the current password. If left empty, a password will be autogenerated.",
	)
}
